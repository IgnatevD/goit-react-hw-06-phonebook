{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App.jsx","redux/contacts/contacs-reduser.js","redux/store.js","index.js","components/ContactList/ContactList.module.css","components/App.module.css"],"names":["module","exports","allActions","formSubmit","createAction","name","number","payload","id","uuidv4","deleteContact","filters","connect","disp","onSubmit","useState","setName","setNumber","nameInputId","numberInputId","e","preventDefault","alert","htmlFor","className","s","formInputName","type","value","onChange","currentTarget","placeholder","pattern","minLength","maxLength","title","formInputNumber","formSubmitButton","contacts","normalFilter","toLowerCase","filter","contact","includes","contactList","map","listName","listNumber","contactDelete","onClick","state","handleFilterChange","target","idFilter","filterContener","labelFilter","inputFilter","App","section","divConteiner","divContactList","allReducer","reducerContats","createReducer","find","reducerFilter","contactsPersistConfig","key","storage","blacklist","persistRedusers","persistReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","allStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,cAAgB,mCAAmC,gBAAkB,uC,mBCAhJD,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,YAAc,4BAA4B,YAAc,8B,iKCiB7GC,EAFI,CAAEC,WAZFC,YAAa,eAAe,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CACpEC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAQ6BI,cAJXN,YAAa,kBAIaO,QAFhCP,YAAa,mB,OCoEdQ,cAAQ,MAJP,SAACC,GAAD,MAAW,CACzBC,SAAU,SAACT,EAAMC,GAAP,OAAkBO,EAAKX,EAAWC,WAAW,CAAEE,OAAMC,gBAGlDM,EAzEK,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOT,EAAP,KAAeW,EAAf,KAEMC,EAAcT,cACdU,EAAgBV,cAoBtB,OACE,uBAAMK,SAnBa,SAACM,GAEpB,OADAA,EAAEC,iBACW,KAAThB,EAAoBiB,MAAM,kHACf,KAAXhB,EAAsBgB,MAAM,+HAEhCR,EAAST,EAAMC,GACfU,EAAQ,SACRC,EAAU,MAYV,UACE,uBAAOM,QAASL,EAAhB,gCACA,uBACEV,GAAIU,EACJM,UAAWC,IAAEC,cACbC,KAAK,OACLtB,KAAK,OACLuB,MAAOvB,EACPwB,SAjBuB,SAACT,GAC5BJ,EAAQI,EAAEU,cAAcF,QAiBpBG,YAAY,gEACZC,QAAQ,yHACRC,UAAU,IACVC,UAAU,KACVC,MAAM,ocAGR,uBAAOZ,QAASJ,EAAhB,wDACA,uBACEX,GAAIW,EACJK,UAAWC,IAAEW,gBACbT,KAAK,MACLtB,KAAK,SACLuB,MAAOtB,EACPuB,SA5ByB,SAACT,GAC9BH,EAAUG,EAAEU,cAAcF,QA4BtBG,YAAY,kFACZC,QAAQ,yBACRC,UAAU,KACVC,UAAU,KACVC,MAAM,kDAGR,wBAAQR,KAAK,SAASH,UAAWC,IAAEY,iBAAnC,+G,gBC1BSzB,eAdM,SAAC,GAA2B,IAAzB0B,EAAwB,EAAxBA,SAChBC,EADwC,EAAd5B,QACH6B,cAI7B,MAAO,CACLF,SAJsBA,EAASG,QAAO,SAACC,GAAD,OACtCA,EAAQrC,KAAKmC,cAAcG,SAASJ,UAOxB,SAAC1B,GAAD,MAAW,CACzBH,cAAe,SAACF,GAAD,OAAQK,EAAKX,EAAWQ,cAAcF,QAGxCI,EAlCK,SAAC,GAAiC,IAA/B0B,EAA8B,EAA9BA,SAAU5B,EAAoB,EAApBA,cAC/B,OACE,oBAAIc,UAAWC,IAAEmB,YAAjB,gBACGN,QADH,IACGA,OADH,EACGA,EAAUO,KAAI,gBAAGrC,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACb,qBAAakB,UAAWC,IAAEiB,QAA1B,UACE,mBAAGlB,UAAWC,IAAEqB,SAAhB,SAA2BzC,IAC3B,mBAAGmB,UAAWC,IAAEsB,WAAhB,SAA6BzC,IAC7B,wBACEkB,UAAWC,IAAEuB,cACbrB,KAAK,SACLsB,QAAS,kBAAMvC,EAAcF,IAH/B,0DAHOA,W,iBCyBFI,eAPM,SAACsC,GAAD,MAAY,CAC/BtB,MAAOsB,EAAMvC,YAEC,SAACE,GAAD,MAAW,CACzBsC,mBAAoB,SAAC/B,GAAD,OAAOP,EAAKX,EAAWS,QAAQS,EAAEgC,OAAOxB,YAG/ChB,EA5BA,SAAC,GAAmC,IAAjCgB,EAAgC,EAAhCA,MAAOuB,EAAyB,EAAzBA,mBACjBE,EAAW5C,cACjB,OACE,sBAAKe,UAAWC,IAAE6B,eAAlB,UACE,uBAAO/B,QAAS8B,EAAU7B,UAAWC,IAAE8B,YAAvC,2LAGA,uBACE/C,GAAI6C,EACJ7B,UAAWC,IAAE+B,YACb7B,KAAK,OACLC,MAAOA,EACPC,SAAUsB,EACVpB,YAAY,iCACZC,QAAQ,yHACRG,MAAM,0c,gBCcCsB,EA1BH,WACV,OACE,qCACE,yBAASjC,UAAWC,IAAEiC,QAAtB,SACE,sBAAKlC,UAAWC,IAAEkC,aAAlB,UACE,6HACA,cAAC,EAAD,SAGJ,yBAASnC,UAAWC,IAAEiC,QAAtB,SACE,sBAAKlC,UAAWC,IAAEmC,eAAlB,UACE,kFACA,cAAC,EAAD,IACA,cAAC,EAAD,a,+CCGKC,EAFI,CAAEC,eApBEC,YAAc,IAAD,mBACjC7D,EAAWC,YAAa,SAAC+C,EAAD,GAAyB,IAAf3C,EAAc,EAAdA,QAIjC,OAHqB2C,EAAMc,MACzB,SAACtB,GAAD,OAAaA,EAAQrC,KAAKmC,gBAAkBjC,EAAQF,KAAKmC,kBAGzDlB,MAAM,qKAAD,OAAoCf,EAAQF,KAA5C,iDACE6C,GAGH,GAAN,mBAAWA,GAAX,CAAkB3C,OAVc,cAYjCL,EAAWQ,eAAgB,SAACwC,EAAD,OAAU3C,EAAV,EAAUA,QAAV,OAC1B2C,EAAMT,QAAO,qBAAGjC,KAAgBD,QAbA,IAoBC0D,cAJfF,YAAc,GAAD,eAChC7D,EAAWS,SAAU,SAACuC,EAAD,YAAU3C,aCD5B2D,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,YAGRC,EAAkBC,YACtBL,EACAM,YAAgB,CACdlC,SAAUuB,EAAWC,eACrBnD,QAASkD,EAAWI,iBAIlBQ,EAAQC,YAAe,CAC3BC,QAASL,EACTM,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UAQjDC,EAFE,CAAEb,QAAOc,UADRC,YAAaf,ICjC/BgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUlB,MAAOa,EAASb,MAA1B,SACE,cAAC,IAAD,CAAamB,QAAS,KAAML,UAAWD,EAASC,UAAhD,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,U,kBCjB1B9F,EAAOC,QAAU,CAAC,QAAU,6BAA6B,cAAgB,mCAAmC,YAAc,iCAAiC,SAAW,8BAA8B,WAAa,kC,kBCAjND,EAAOC,QAAU,CAAC,QAAU,qBAAqB,aAAe,0BAA0B,eAAiB,+B","file":"static/js/main.0e7577b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSubmitButton\":\"ContactForm_formSubmitButton__2WdGD\",\"formInputName\":\"ContactForm_formInputName__3piIq\",\"formInputNumber\":\"ContactForm_formInputNumber__1yixk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterConteiner\":\"Filter_filterConteiner__2YTJz\",\"labelFilter\":\"Filter_labelFilter__3lXFN\",\"inputFilter\":\"Filter_inputFilter__fLLJ3\"};","/** @format */\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst formSubmit = createAction(\"add_Contact\", ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(\"delete_Contact\");\n\nconst filters = createAction(\"filter_contact\");\n\nconst allActions = { formSubmit, deleteContact, filters };\n\nexport default allActions;\n","/** @format */\n\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport s from \"../ContactForm/ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport allActions from \"../../redux/contacts/contacts-actions\";\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n    if (name === \"\") return alert(\"Введите имя контакта\");\n    if (number === \"\") return alert(\"Введите номер телефона\");\n\n    onSubmit(name, number);\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleIputChangeName = (e) => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleIputChangeNumber = (e) => {\n    setNumber(e.currentTarget.value);\n  };\n\n  return (\n    <form onSubmit={handelSubmit}>\n      <label htmlFor={nameInputId}>Имя</label>\n      <input\n        id={nameInputId}\n        className={s.formInputName}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleIputChangeName}\n        placeholder=\"Имя Фамилия\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        minLength=\"2\"\n        maxLength=\"40\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      />\n\n      <label htmlFor={numberInputId}>Телефон</label>\n      <input\n        id={numberInputId}\n        className={s.formInputNumber}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleIputChangeNumber}\n        placeholder=\"Номер телефона\"\n        pattern=\"\\+?[0-9\\s\\-\\(\\)]+\"\n        minLength=\"10\"\n        maxLength=\"13\"\n        title=\"+380223332222 или (044)7881000\"\n      />\n\n      <button type=\"submit\" className={s.formSubmitButton}>\n        Добавить контакт\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nconst mapDisp = (disp) => ({\n  onSubmit: (name, number) => disp(allActions.formSubmit({ name, number })),\n});\n\nexport default connect(null, mapDisp)(ContactForm);\n","/** @format */\n\nimport s from \"./ContactList.module.css\";\nimport { connect } from \"react-redux\";\nimport allActions from \"../../redux/contacts/contacts-actions\";\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts?.map(({ id, name, number }) => (\n        <li key={id} className={s.contact}>\n          <p className={s.listName}>{name}</p>\n          <p className={s.listNumber}>{number}</p>\n          <button\n            className={s.contactDelete}\n            type=\"button\"\n            onClick={() => deleteContact(id)}\n          >\n            удалить\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst mapStateProp = ({ contacts, filters }) => {\n  const normalFilter = filters.toLowerCase();\n  const visibleContacns = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalFilter)\n  );\n  return {\n    contacts: visibleContacns,\n  };\n};\n\nconst mapDisp = (disp) => ({\n  deleteContact: (id) => disp(allActions.deleteContact(id)),\n});\n\nexport default connect(mapStateProp, mapDisp)(ContactList);\n","/** @format */\n\nimport s from \"../Filter/Filter.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\";\nimport allActions from \"../../redux/contacts/contacts-actions\";\n\nconst Filter = ({ value, handleFilterChange }) => {\n  const idFilter = uuidv4();\n  return (\n    <div className={s.filterContener}>\n      <label htmlFor={idFilter} className={s.labelFilter}>\n        Поиск контактов по имени и фамили\n      </label>\n      <input\n        id={idFilter}\n        className={s.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={handleFilterChange}\n        placeholder=\"Поиск\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      />\n    </div>\n  );\n};\n\nconst mapStateProp = (state) => ({\n  value: state.filters,\n});\nconst mapDisp = (disp) => ({\n  handleFilterChange: (e) => disp(allActions.filters(e.target.value)),\n});\n\nexport default connect(mapStateProp, mapDisp)(Filter);\n","/** @format */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\n\nimport Filter from \"./Filter/Filter\";\nimport s from \"../components/App.module.css\";\n\nconst App = () => {\n  return (\n    <>\n      <section className={s.section}>\n        <div className={s.divConteiner}>\n          <h1>Телефонная книга</h1>\n          <ContactForm />\n        </div>\n      </section>\n      <section className={s.section}>\n        <div className={s.divContactList}>\n          <h2>Контакты</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </section>\n    </>\n  );\n};\n\nApp.propTypes = {\n  contacts: PropTypes.array,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default App;\n","/** @format */\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport allActions from \"./contacts-actions\";\n\nconst reducerContats = createReducer([], {\n  [allActions.formSubmit]: (state, { payload }) => {\n    const arryFindName = state.find(\n      (contact) => contact.name.toLowerCase() === payload.name.toLowerCase()\n    );\n    if (arryFindName) {\n      alert(`Ошибка, контакт с данным именем ${payload.name} уже есть`);\n      return state;\n    }\n\n    return [...state, payload];\n  },\n  [allActions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst reducerFilter = createReducer(\"\", {\n  [allActions.filters]: (state, { payload }) => payload,\n});\n\nconst allReducer = { reducerContats, reducerFilter };\n\nexport default allReducer;\n","/** @format */\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport storage from \"redux-persist/lib/storage\";\nimport allReducer from \"../redux/contacts/contacs-reduser\";\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filters\"],\n};\n\nconst persistRedusers = persistReducer(\n  contactsPersistConfig,\n  combineReducers({\n    contacts: allReducer.reducerContats,\n    filters: allReducer.reducerFilter,\n  })\n);\n\nconst store = configureStore({\n  reducer: persistRedusers,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nconst persistor = persistStore(store);\nconst allStore = { store, persistor };\n\nexport default allStore;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./components/App\";\nimport allStore from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={allStore.store}>\n      <PersistGate loading={null} persistor={allStore.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__3ZIyH\",\"contactDelete\":\"ContactList_contactDelete__iGfsw\",\"contactList\":\"ContactList_contactList__3MzlG\",\"listName\":\"ContactList_listName__2W0zJ\",\"listNumber\":\"ContactList_listNumber__3TNxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__sENSi\",\"divConteiner\":\"App_divConteiner__1oPbJ\",\"divContactList\":\"App_divContactList__2k31a\"};"],"sourceRoot":""}